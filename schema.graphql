enum Tier {
    NONE
    GOLD
    DIAMONT
    RAINBOW
}

enum TransactionType {
    DRAW
    TRADE
    BUY
}

interface Transaction {
 	"Internal ID used for indexation"
	id: ID!

	"Seller account"
	from: Account

	"Buyer account"
	to: Account

    card: Card

	"Current transaction type"
	type: TransactionType!

    timestamp: BigInt!

    date: Date!
}

type Date @entity {
    id: ID!

    day: String!

    month: String!

    year: String!

    transactions: [Transaction!]! @derivedFrom(field: "date")
}

type Card @entity {
    id: ID!

    "Card type id"
    cardTypeId: BigInt
    
    cid: String
    
    queryId: Bytes

    serial: BigInt

    "Token's current owner"
	owner: Account!

	"Current approval"
	approval: Account

	"Current burned status"
	burned: Boolean

	"Tokens' visual representation"
	uri: String

    "Could be Gold, Diamont, Rainbow"
    tier: Tier

    history: [Transaction!]! @derivedFrom(field: "card")
}

"A 721 holder account"
type Account @entity {
	"Internal ID used for indexation"
	id: ID!

	"Owned tokens"
	tokens: [Card!]! @derivedFrom(field: "owner")

	"Approved tokens"
	approved: [Card!]! @derivedFrom(field: "approval")
	
	"Transactions sent by this account"
	sent: [Transaction!] @derivedFrom(field: "from")
 
	"Transactions recieved by this account"
	recieved: [Transaction!] @derivedFrom(field: "to")
}

type Draw implements Transaction @entity {
	"Internal ID used for indexation"
	id: ID!

	"Seller account"
	from: Account

	"Buyer account"
	to: Account

	card: Card

	"Current transaction type"
	type: TransactionType!

    timestamp: BigInt!

    date: Date!
}

type Trade implements Transaction @entity {
	"Internal ID used for indexation"
	id: ID!

	"Seller account"
	from: Account

	"Buyer account"
	to: Account

	card: Card

	"Current transaction type"
	type: TransactionType!

    timestamp: BigInt!

    date: Date!
}

type Buy implements Transaction @entity {
	"Internal ID used for indexation"
	id: ID!

	"Seller account"
	from: Account

	"Buyer account"
	to: Account

	card: Card

	"Current transaction type"
	type: TransactionType!

    timestamp: BigInt!

    date: Date!
}